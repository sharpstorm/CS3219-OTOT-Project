// Code generated by MockGen. DO NOT EDIT.
// Source: backend.cs3219.comp.nus.edu.sg/database (interfaces: DatabaseCardAdapter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "backend.cs3219.comp.nus.edu.sg/model"
	gomock "github.com/golang/mock/gomock"
)

// MockDatabaseCardAdapter is a mock of DatabaseCardAdapter interface.
type MockDatabaseCardAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseCardAdapterMockRecorder
}

// MockDatabaseCardAdapterMockRecorder is the mock recorder for MockDatabaseCardAdapter.
type MockDatabaseCardAdapterMockRecorder struct {
	mock *MockDatabaseCardAdapter
}

// NewMockDatabaseCardAdapter creates a new mock instance.
func NewMockDatabaseCardAdapter(ctrl *gomock.Controller) *MockDatabaseCardAdapter {
	mock := &MockDatabaseCardAdapter{ctrl: ctrl}
	mock.recorder = &MockDatabaseCardAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseCardAdapter) EXPECT() *MockDatabaseCardAdapterMockRecorder {
	return m.recorder
}

// CreateCard mocks base method.
func (m *MockDatabaseCardAdapter) CreateCard(arg0 *model.Card) (*model.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCard", arg0)
	ret0, _ := ret[0].(*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCard indicates an expected call of CreateCard.
func (mr *MockDatabaseCardAdapterMockRecorder) CreateCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCard", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).CreateCard), arg0)
}

// DeleteCard mocks base method.
func (m *MockDatabaseCardAdapter) DeleteCard(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCard indicates an expected call of DeleteCard.
func (mr *MockDatabaseCardAdapterMockRecorder) DeleteCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCard", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).DeleteCard), arg0)
}

// EditCard mocks base method.
func (m *MockDatabaseCardAdapter) EditCard(arg0 *model.Card) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditCard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditCard indicates an expected call of EditCard.
func (mr *MockDatabaseCardAdapterMockRecorder) EditCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditCard", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).EditCard), arg0)
}

// GetAllCards mocks base method.
func (m *MockDatabaseCardAdapter) GetAllCards() ([]*model.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCards")
	ret0, _ := ret[0].([]*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllCards indicates an expected call of GetAllCards.
func (mr *MockDatabaseCardAdapterMockRecorder) GetAllCards() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCards", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).GetAllCards))
}

// GetCard mocks base method.
func (m *MockDatabaseCardAdapter) GetCard(arg0 int) (*model.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCard", arg0)
	ret0, _ := ret[0].(*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCard indicates an expected call of GetCard.
func (mr *MockDatabaseCardAdapterMockRecorder) GetCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCard", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).GetCard), arg0)
}

// GetCardByUniqueId mocks base method.
func (m *MockDatabaseCardAdapter) GetCardByUniqueId(arg0 string) (*model.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardByUniqueId", arg0)
	ret0, _ := ret[0].(*model.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCardByUniqueId indicates an expected call of GetCardByUniqueId.
func (mr *MockDatabaseCardAdapterMockRecorder) GetCardByUniqueId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardByUniqueId", reflect.TypeOf((*MockDatabaseCardAdapter)(nil).GetCardByUniqueId), arg0)
}
